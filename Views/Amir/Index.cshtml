@{
    ViewData["Title"] = "Amir Formu"; 
}
<style>
    .custom-table {
        border-collapse: collapse; 
        width: 100%; 
        border-radius: 15px;
        overflow: hidden; 
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        background-color: #fff; 
    }

        .custom-table th,
        .custom-table td {
            padding: 12px; 
            text-align: left; 
            border-bottom: 1px solid #ddd; 
        }

        .custom-table th {
            /*background-color: #f2f2f2;*/ /* Başlık arka plan rengi */
            color: #333; /* Başlık metin rengi */
        }
    html, body {
        margin: 0;
        padding: 0;
        height: 100%;
        background-image: url('../../Images/background_image.jpg');
        background-size: cover; 
        background-position: center; 
        font-family: Arial, sans-serif;
    }
    .toast-image {
        width: 18px;
        height: 18px;
    }
</style>
<html>
<body>
    <table class="table table-striped custom-table table-hover" style="margin-top:40px;">
        <caption>Vizite Alanlar Listesi</caption>
        <thead class="table-warning">
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Sicil No</th>
                <th scope="col">İsim</th>
                <th scope="col">Soyisim</th>
                <th scope="col">Tel</th>
                <th scope="col">Yaka Kodu</th>
                <th scope="col">Dosyasi</th>
            </tr>
        </thead>
        <tbody class="table-group-divider">
            @foreach (var amir in Model) // Model üzerinden döngü
            {
                <tr>
                    <th scope="row">@amir.id</th>
                    <td>@amir.sicilno</td>
                    <td>@amir.isim</td>
                    <td>@amir.soyisim</td>
                    <td>@amir.tel</td>
                    <td>@amir.yakakodu</td>
                    
                    <td>
                    <!-- Modalı açacak ikon -->
                    <a href="#" data-toggle="modal" data-target="#myModal-@amir.sicilno">
                        <img src="~/Images/modal_icon.png" style="height:30px; width:30px;" />
                    </a>


                    <div class="modal fade" id="myModal-@amir.sicilno" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Detaylar</h5>
                                    
                                </div>
                                <div class="modal-body">

                                    Profili: <br>
                                    Sicil No: @amir.sicilno<br>
                                    İsim: @amir.isim<br>
                                    Soyisim: @amir.soyisim<br>
                                    Telefon: <br>
                                    E-mail: <br>
                                    Departman: <br>
                                    Amirleri: <br><br><br><br>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @*DUZENLENECEK*@

    <!-- Bootstrap Toast Butonu -->
    <button type="button" class="btn btn-success btn-outline-warning btn-lg" style="color:white;" id="startToastBtn"><strong>Yeni Kayit</strong></button>

    <!-- Toast İçeriği -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header" style="background-color: blue; color:white;">
                <img src="~/Images/pngegg (1).png" class="rounded me-1 toast-image" alt="scanner">
                <strong class="me-auto">Kart Okuyucu</strong>
                <small>Şimdi...</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                Vizite kaydı yapmak için hastanın kartını okutunuz.
            </div>
        </div>
    </div>

    <!-- Durdurma Butonu -->
    <button type="button" class="btn btn-danger btn-outline-warning btn-lg" style="color:white;" id="stopToastBtn"><strong>Kaydı Durdur</strong></button>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

   
    <script>
        var cardReadingInterval; // Kart okuma işlemi için interval ID
        var toastLiveExample = document.getElementById('liveToast');

        // Yeni kayıt butonuna tıklandığında
        document.getElementById('startToastBtn').addEventListener('click', function () {
            var toast = new bootstrap.Toast(toastLiveExample, {
                autohide: false  // Otomatik kapanmayı engelliyoruz
            });
            toast.show();

            // Kart okuma işlemini başlat
            startCardReading();
        });

        // Kaydı durdur butonuna tıklandığında
        document.getElementById('stopToastBtn').addEventListener('click', function () {
            stopCardReading();
            // Toast'u kapat
            var toast = new bootstrap.Toast(toastLiveExample);
            toast.hide();
        });

        // Kart okuma işlemi başlatma fonksiyonu
        function startCardReading() {
            console.log("Kart okuma işlemi başladı...");

            // Kart okuma işlemini simüle etmek için interval başlatıyoruz
            cardReadingInterval = setInterval(function () {
                console.log("Kart okunuyor..."); // Burada gerçek kart okuma işlemi olabilir
            }, 2000);
        }

        // Kart okuma işlemi durdurma fonksiyonu
        function stopCardReading() {
            console.log("Kart okuma durduruldu.")
            alert("Kart okuma işlemi durduruldu.");
            clearInterval(cardReadingInterval); // Interval durduruluyor
        }
    </script>
            




</body>
</html>
